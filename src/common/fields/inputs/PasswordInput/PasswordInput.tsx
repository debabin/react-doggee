import React from 'react';

import styles from './Input.module.css';

interface InputProps extends Omit<React.HTMLProps<HTMLInputElement>, 'type'> {
  isError?: boolean;
  helperText?: string;
}

export const PasswordInput: React.FC<InputProps> = ({ isError = false, helperText, ...props }) => {
  const [showPassword, setShowPassword] = React.useState(false);
  const showPasswordToggle = props.value;

  return (
    <div className={styles.input_container}>
      <input
        className={`${styles.input} ${isError ? styles.error : ''}`}
        {...props}
        type={showPasswordToggle && showPassword ? 'text' : 'password'}
      />
      {isError && helperText && <div className={styles.helper_text}>{helperText}</div>}
      {showPasswordToggle && (
        <div
          className={styles.password_toogle_container}
          onClick={() => setShowPassword(!showPassword)}
        >
          {showPassword ? (
            <svg
              width='16'
              height='16'
              viewBox='0 0 16 16'
              fill='none'
              xmlns='http://www.w3.org/2000/svg'
            >
              <path
                fillRule='evenodd'
                clipRule='evenodd'
                d='M14.9992 1.87105C15.2396 1.63073 15.2396 1.24109 14.9992 1.00077C14.7589 0.760445 14.3693 0.760445 14.129 1.00077L1.00075 14.129C0.760432 14.3693 0.760432 14.7589 1.00075 14.9993C1.24108 15.2396 1.63072 15.2396 1.87104 14.9993L4.20695 12.6633C5.32803 13.1911 6.61923 13.5385 8 13.5385C10.2023 13.5385 12.1767 12.6547 13.5964 11.5651C14.3076 11.0193 14.8949 10.4103 15.3099 9.81241C15.7133 9.23102 16 8.593 16 8.00001C16 7.40703 15.7133 6.76901 15.3099 6.18762C14.8949 5.58971 14.3076 4.98076 13.5964 4.43491C13.3813 4.26984 13.1535 4.10949 12.9141 3.95622L14.9992 1.87105ZM12.0201 4.85017L10.5671 6.30316C10.8893 6.78958 11.0769 7.37289 11.0769 8.00001C11.0769 9.69935 9.69934 11.0769 8 11.0769C7.37287 11.0769 6.78956 10.8893 6.30314 10.5672L5.14071 11.7296C6.01499 12.0858 6.9843 12.3077 8 12.3077C9.87614 12.3077 11.594 11.5504 12.847 10.5888C13.4722 10.109 13.9663 9.58971 14.2987 9.1107C14.6426 8.61516 14.7692 8.22754 14.7692 8.00001C14.7692 7.77249 14.6426 7.38486 14.2987 6.88933C13.9663 6.41032 13.4722 5.89106 12.847 5.41127C12.5901 5.21405 12.3136 5.02543 12.0201 4.85017ZM7.20405 9.66625C7.44506 9.78158 7.71499 9.84617 8 9.84617C9.0196 9.84617 9.84615 9.01962 9.84615 8.00001C9.84615 7.715 9.78157 7.44507 9.66623 7.20407L7.20405 9.66625Z'
                fill='black'
                fillOpacity='0.7'
              />
              <path
                d='M8 2.46155C8.82121 2.46155 9.61074 2.58444 10.3516 2.79506C10.5305 2.8459 10.5837 3.06913 10.4522 3.20061L9.84492 3.8079C9.78306 3.86975 9.69346 3.89447 9.60815 3.87514C9.09103 3.75796 8.55238 3.69232 8 3.69232C6.12386 3.69232 4.40598 4.44959 3.15296 5.41127C2.52782 5.89106 2.0337 6.41032 1.70127 6.88933C1.35738 7.38486 1.23077 7.77249 1.23077 8.00001C1.23077 8.22754 1.35738 8.61516 1.70127 9.1107C1.98425 9.51845 2.38438 9.95536 2.88277 10.3723C2.99802 10.4687 3.00906 10.6438 2.90281 10.75L2.38554 11.2673C2.29523 11.3576 2.15112 11.3656 2.05361 11.2831C1.49866 10.8136 1.03489 10.3092 0.690136 9.81241C0.286663 9.23102 0 8.593 0 8.00001C0 7.40703 0.286663 6.76901 0.690136 6.18762C1.10507 5.58971 1.69241 4.98076 2.40361 4.43491C3.82331 3.34531 5.79773 2.46155 8 2.46155Z'
                fill='black'
                fillOpacity='0.7'
              />
              <path
                d='M8 4.92309C8.06936 4.92309 8.13819 4.92539 8.20641 4.9299C8.40368 4.94297 8.47529 5.17752 8.33549 5.31732L7.39888 6.25393C6.86283 6.43844 6.43843 6.86285 6.25392 7.39889L5.31731 8.33551C5.17751 8.4753 4.94296 8.4037 4.92989 8.20642C4.92537 8.1382 4.92308 8.06938 4.92308 8.00001C4.92308 6.30068 6.30066 4.92309 8 4.92309Z'
                fill='black'
                fillOpacity='0.7'
              />
            </svg>
          ) : (
            <svg
              width='16'
              height='16'
              viewBox='0 0 16 16'
              fill='none'
              xmlns='http://www.w3.org/2000/svg'
            >
              <path
                fillRule='evenodd'
                clipRule='evenodd'
                d='M4.92308 6.00001C4.92308 4.30067 6.30066 2.92309 8 2.92309C9.69934 2.92309 11.0769 4.30067 11.0769 6.00001C11.0769 7.69935 9.69934 9.07693 8 9.07693C6.30066 9.07693 4.92308 7.69935 4.92308 6.00001ZM8 4.15386C6.9804 4.15386 6.15385 4.98041 6.15385 6.00001C6.15385 7.01961 6.9804 7.84616 8 7.84616C9.0196 7.84616 9.84615 7.01961 9.84615 6.00001C9.84615 4.98041 9.0196 4.15386 8 4.15386Z'
                fill='black'
                fillOpacity='0.7'
              />
              <path
                fillRule='evenodd'
                clipRule='evenodd'
                d='M1.70127 4.88933C1.35738 5.38486 1.23077 5.77248 1.23077 6.00001C1.23077 6.22754 1.35738 6.61516 1.70127 7.11069C2.0337 7.58971 2.52782 8.10896 3.15296 8.58875C4.40598 9.55043 6.12386 10.3077 8 10.3077C9.87614 10.3077 11.594 9.55043 12.847 8.58875C13.4722 8.10896 13.9663 7.58971 14.2987 7.11069C14.6426 6.61516 14.7692 6.22754 14.7692 6.00001C14.7692 5.77248 14.6426 5.38486 14.2987 4.88933C13.9663 4.41031 13.4722 3.89106 12.847 3.41126C11.594 2.44959 9.87614 1.69232 8 1.69232C6.12386 1.69232 4.40598 2.44959 3.15296 3.41126C2.52782 3.89106 2.0337 4.41031 1.70127 4.88933ZM2.40361 2.43491C3.82331 1.34531 5.79773 0.461548 8 0.461548C10.2023 0.461548 12.1767 1.34531 13.5964 2.43491C14.3076 2.98075 14.8949 3.58971 15.3099 4.18762C15.7133 4.76901 16 5.40703 16 6.00001C16 6.59299 15.7133 7.23101 15.3099 7.8124C14.8949 8.41031 14.3076 9.01926 13.5964 9.56511C12.1767 10.6547 10.2023 11.5385 8 11.5385C5.79773 11.5385 3.82331 10.6547 2.40361 9.56511C1.69241 9.01926 1.10507 8.41031 0.690136 7.8124C0.286663 7.23101 0 6.59299 0 6.00001C0 5.40703 0.286663 4.76901 0.690136 4.18762C1.10507 3.58971 1.69241 2.98075 2.40361 2.43491Z'
                fill='black'
                fillOpacity='0.7'
              />
            </svg>
          )}
        </div>
      )}
    </div>
  );
};
